<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="326" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="309.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="309.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`0x10d0f4008 (1 samples, 0.68%)</title><rect x="10" y="213" width="8" height="15" fill="rgb(205,3,22)"/><text text-anchor="left" x="13.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.68%)</title><rect x="10" y="197" width="8" height="15" fill="rgb(224,203,10)"/><text text-anchor="left" x="13.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.68%)</title><rect x="10" y="181" width="8" height="15" fill="rgb(239,40,26)"/><text text-anchor="left" x="13.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.68%)</title><rect x="10" y="165" width="8" height="15" fill="rgb(237,143,20)"/><text text-anchor="left" x="13.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.68%)</title><rect x="10" y="149" width="8" height="15" fill="rgb(211,66,17)"/><text text-anchor="left" x="13.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.68%)</title><rect x="10" y="133" width="8" height="15" fill="rgb(214,93,43)"/><text text-anchor="left" x="13.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.68%)</title><rect x="10" y="117" width="8" height="15" fill="rgb(230,64,8)"/><text text-anchor="left" x="13.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.68%)</title><rect x="10" y="101" width="8" height="15" fill="rgb(251,173,25)"/><text text-anchor="left" x="13.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.68%)</title><rect x="10" y="85" width="8" height="15" fill="rgb(253,121,54)"/><text text-anchor="left" x="13.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dyld`ImageLoaderMachOCompressed::libReExported (1 samples, 0.68%)</title><rect x="10" y="69" width="8" height="15" fill="rgb(231,182,21)"/><text text-anchor="left" x="13.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_size (1 samples, 0.68%)</title><rect x="503" y="117" width="8" height="15" fill="rgb(219,12,38)"/><text text-anchor="left" x="506.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`free (2 samples, 1.37%)</title><rect x="503" y="133" width="16" height="15" fill="rgb(250,207,54)"/><text text-anchor="left" x="506.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.68%)</title><rect x="511" y="117" width="8" height="15" fill="rgb(224,200,33)"/><text text-anchor="left" x="514.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.68%)</title><rect x="535" y="117" width="8" height="15" fill="rgb(223,171,54)"/><text text-anchor="left" x="538.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`free_tiny (8 samples, 5.48%)</title><rect x="519" y="133" width="64" height="15" fill="rgb(241,16,35)"/><text text-anchor="left" x="522.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsyst..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 3.42%)</title><rect x="543" y="117" width="40" height="15" fill="rgb(226,107,49)"/><text text-anchor="left" x="546.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lib..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.68%)</title><rect x="583" y="101" width="8" height="15" fill="rgb(241,39,28)"/><text text-anchor="left" x="586.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc (3 samples, 2.05%)</title><rect x="583" y="133" width="25" height="15" fill="rgb(241,96,20)"/><text text-anchor="left" x="586.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 2.05%)</title><rect x="583" y="117" width="25" height="15" fill="rgb(206,53,18)"/><text text-anchor="left" x="586.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 1.37%)</title><rect x="591" y="101" width="17" height="15" fill="rgb(232,32,44)"/><text text-anchor="left" x="594.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.68%)</title><rect x="600" y="85" width="8" height="15" fill="rgb(216,219,18)"/><text text-anchor="left" x="603.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.68%)</title><rect x="600" y="69" width="8" height="15" fill="rgb(254,90,12)"/><text text-anchor="left" x="603.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_size (1 samples, 0.68%)</title><rect x="608" y="133" width="8" height="15" fill="rgb(239,93,27)"/><text text-anchor="left" x="611.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.68%)</title><rect x="616" y="133" width="8" height="15" fill="rgb(244,180,51)"/><text text-anchor="left" x="619.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc (5 samples, 3.42%)</title><rect x="624" y="117" width="40" height="15" fill="rgb(208,99,32)"/><text text-anchor="left" x="627.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lib..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 3.42%)</title><rect x="624" y="101" width="40" height="15" fill="rgb(216,138,43)"/><text text-anchor="left" x="627.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">lib..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 2.74%)</title><rect x="632" y="85" width="32" height="15" fill="rgb(224,122,30)"/><text text-anchor="left" x="635.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">li..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 2.74%)</title><rect x="632" y="69" width="32" height="15" fill="rgb(246,111,20)"/><text text-anchor="left" x="635.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">li..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.68%)</title><rect x="680" y="69" width="8" height="15" fill="rgb(237,128,10)"/><text text-anchor="left" x="683.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 2.05%)</title><rect x="688" y="69" width="25" height="15" fill="rgb(205,66,40)"/><text text-anchor="left" x="691.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 2.05%)</title><rect x="688" y="53" width="25" height="15" fill="rgb(205,6,49)"/><text text-anchor="left" x="691.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.68%)</title><rect x="705" y="37" width="8" height="15" fill="rgb(228,184,39)"/><text text-anchor="left" x="708.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_size (1 samples, 0.68%)</title><rect x="713" y="69" width="8" height="15" fill="rgb(250,211,29)"/><text text-anchor="left" x="716.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_size (2 samples, 1.37%)</title><rect x="721" y="69" width="16" height="15" fill="rgb(236,166,26)"/><text text-anchor="left" x="724.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 7.53%)</title><rect x="672" y="101" width="89" height="15" fill="rgb(207,24,36)"/><text text-anchor="left" x="675.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_realloc (10 samples, 6.85%)</title><rect x="680" y="85" width="81" height="15" fill="rgb(220,8,21)"/><text text-anchor="left" x="683.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 2.05%)</title><rect x="737" y="69" width="24" height="15" fill="rgb(222,29,25)"/><text text-anchor="left" x="740.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::hff5e109fcae3dfcb (19 samples, 13.01%)</title><rect x="624" y="133" width="153" height="15" fill="rgb(208,64,48)"/><text text-anchor="left" x="627.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`alloc::raw..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`realloc (14 samples, 9.59%)</title><rect x="664" y="117" width="113" height="15" fill="rgb(249,133,35)"/><text text-anchor="left" x="667.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem_mal..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_size (2 samples, 1.37%)</title><rect x="761" y="101" width="16" height="15" fill="rgb(242,143,51)"/><text text-anchor="left" x="764.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$u8$GT$::hash::hf7f09070b5cf7791 (5 samples, 3.42%)</title><rect x="777" y="133" width="41" height="15" fill="rgb(210,1,45)"/><text text-anchor="left" x="780.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">unt..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`core::iter::adapters::process_results::h4b35366b496c2224 (1 samples, 0.68%)</title><rect x="818" y="133" width="8" height="15" fill="rgb(236,147,54)"/><text text-anchor="left" x="821.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..SpecExtend$LT$T$C$I$GT$$GT$::from_iter::h16211259d324bcb4 (1 samples, 0.68%)</title><rect x="818" y="117" width="8" height="15" fill="rgb(245,7,36)"/><text text-anchor="left" x="821.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`_$LT$core..iter..adapters..ResultShunt$LT$I$C$E$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h8b688810a8b6324c (1 samples, 0.68%)</title><rect x="818" y="101" width="8" height="15" fill="rgb(220,76,45)"/><text text-anchor="left" x="821.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_size (1 samples, 0.68%)</title><rect x="939" y="101" width="8" height="15" fill="rgb(210,130,24)"/><text text-anchor="left" x="942.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`free (4 samples, 2.74%)</title><rect x="923" y="117" width="32" height="15" fill="rgb(244,164,34)"/><text text-anchor="left" x="926.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">li..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.68%)</title><rect x="947" y="101" width="8" height="15" fill="rgb(220,200,30)"/><text text-anchor="left" x="950.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.68%)</title><rect x="979" y="101" width="8" height="15" fill="rgb(218,212,16)"/><text text-anchor="left" x="982.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`free_tiny (10 samples, 6.85%)</title><rect x="955" y="117" width="81" height="15" fill="rgb(247,111,25)"/><text text-anchor="left" x="958.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 4.11%)</title><rect x="987" y="101" width="49" height="15" fill="rgb(251,92,14)"/><text text-anchor="left" x="990.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libs..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.68%)</title><rect x="1028" y="85" width="8" height="15" fill="rgb(227,60,38)"/><text text-anchor="left" x="1031.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 2.05%)</title><rect x="1076" y="53" width="25" height="15" fill="rgb(205,108,35)"/><text text-anchor="left" x="1079.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">l..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.68%)</title><rect x="1101" y="53" width="8" height="15" fill="rgb(215,120,42)"/><text text-anchor="left" x="1104.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc (15 samples, 10.27%)</title><rect x="1036" y="117" width="121" height="15" fill="rgb(241,105,33)"/><text text-anchor="left" x="1039.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem_mallo..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`malloc_zone_malloc (15 samples, 10.27%)</title><rect x="1036" y="101" width="121" height="15" fill="rgb(228,111,31)"/><text text-anchor="left" x="1039.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem_mallo..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 10.27%)</title><rect x="1036" y="85" width="121" height="15" fill="rgb(219,63,16)"/><text text-anchor="left" x="1039.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem_mallo..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 10.27%)</title><rect x="1036" y="69" width="121" height="15" fill="rgb(235,94,6)"/><text text-anchor="left" x="1039.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libsystem_mallo..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 4.11%)</title><rect x="1109" y="53" width="48" height="15" fill="rgb(239,82,46)"/><text text-anchor="left" x="1112.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libs..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`hashbrown::raw::RawTable$LT$T$GT$::reserve_rehash::h7c4df72d84417211 (43 samples, 29.45%)</title><rect x="826" y="133" width="347" height="15" fill="rgb(218,207,20)"/><text text-anchor="left" x="829.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`hashbrown::raw::RawTable$LT$T$GT$::res..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$u8$GT$::hash::hf7f09070b5cf7791 (2 samples, 1.37%)</title><rect x="1157" y="117" width="16" height="15" fill="rgb(205,135,11)"/><text text-anchor="left" x="1160.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (146 samples, 100%)</title><rect x="10" y="277" width="1180" height="15" fill="rgb(242,153,27)"/><text text-anchor="left" x="13.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`0x1 (146 samples, 100.00%)</title><rect x="10" y="261" width="1180" height="15" fill="rgb(226,205,32)"/><text text-anchor="left" x="13.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`0x1</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libdyld.dylib`start (146 samples, 100.00%)</title><rect x="10" y="245" width="1180" height="15" fill="rgb(236,162,29)"/><text text-anchor="left" x="13.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">libdyld.dylib`start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`main (146 samples, 100.00%)</title><rect x="10" y="229" width="1180" height="15" fill="rgb(213,134,46)"/><text text-anchor="left" x="13.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`main</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`std::rt::lang_start_internal::hcf96e32a124891dc (145 samples, 99.32%)</title><rect x="18" y="213" width="1172" height="15" fill="rgb(232,40,12)"/><text text-anchor="left" x="21.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`std::rt::lang_start_internal::hcf96e32a124891dc</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`__rust_maybe_catch_panic (145 samples, 99.32%)</title><rect x="18" y="197" width="1172" height="15" fill="rgb(233,134,11)"/><text text-anchor="left" x="21.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`std::panicking::try::do_call::ha1a4587e2a4eb439 (145 samples, 99.32%)</title><rect x="18" y="181" width="1172" height="15" fill="rgb(209,170,43)"/><text text-anchor="left" x="21.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`std::panicking::try::do_call::ha1a4587e2a4eb439</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h2acbf1ae8d2d68ed (145 samples, 99.32%)</title><rect x="18" y="165" width="1172" height="15" fill="rgb(231,44,38)"/><text text-anchor="left" x="21.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h2acbf1ae8d2d68ed</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`untitled::main::he8cf1e18f5a61284 (145 samples, 99.32%)</title><rect x="18" y="149" width="1172" height="15" fill="rgb(225,14,52)"/><text text-anchor="left" x="21.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">untitled`untitled::main::he8cf1e18f5a61284</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`untitled::get_max_score_result::h65a0b03b8d1e8b2c (2 samples, 1.37%)</title><rect x="1173" y="133" width="17" height="15" fill="rgb(243,34,51)"/><text text-anchor="left" x="1176.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>untitled`alloc::slice::merge_sort::h2fc7421068835151 (2 samples, 1.37%)</title><rect x="1173" y="117" width="17" height="15" fill="rgb(217,152,47)"/><text text-anchor="left" x="1176.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.68%)</title><rect x="1181" y="101" width="9" height="15" fill="rgb(252,166,46)"/><text text-anchor="left" x="1184.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>